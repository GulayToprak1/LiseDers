// <auto-generated />
using LiseDers.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LiseDers.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240706225445_oluşturuldu")]
    partial class oluşturuldu
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BilisimSınavlar", b =>
                {
                    b.Property<int>("BilisimId")
                        .HasColumnType("int");

                    b.Property<int>("SınavlarId")
                        .HasColumnType("int");

                    b.HasKey("BilisimId", "SınavlarId");

                    b.HasIndex("SınavlarId");

                    b.ToTable("BilisimSınavlar");
                });

            modelBuilder.Entity("FenSınavlar", b =>
                {
                    b.Property<int>("FenId")
                        .HasColumnType("int");

                    b.Property<int>("SınavlarId")
                        .HasColumnType("int");

                    b.HasKey("FenId", "SınavlarId");

                    b.HasIndex("SınavlarId");

                    b.ToTable("FenSınavlar");
                });

            modelBuilder.Entity("LiseDers.Model.Model.Bilisim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EgitimciId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("int");

                    b.Property<int>("SinavId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bilisims");
                });

            modelBuilder.Entity("LiseDers.Model.Model.Egitimciler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BilisimId")
                        .HasColumnType("int");

                    b.Property<int>("FenId")
                        .HasColumnType("int");

                    b.Property<int>("MatematikId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BilisimId");

                    b.HasIndex("FenId");

                    b.HasIndex("MatematikId");

                    b.ToTable("Egitimcies");
                });

            modelBuilder.Entity("LiseDers.Model.Model.Fen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EgitimciId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("int");

                    b.Property<int>("SınavId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Fens");
                });

            modelBuilder.Entity("LiseDers.Model.Model.Matematik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EgitimciId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("int");

                    b.Property<int>("SınavId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Matematiks");
                });

            modelBuilder.Entity("LiseDers.Model.Model.Ogrenciler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BilisimId")
                        .HasColumnType("int");

                    b.Property<int>("EgitimciId")
                        .HasColumnType("int");

                    b.Property<int>("FenId")
                        .HasColumnType("int");

                    b.Property<int>("MatematikId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SınavId")
                        .HasColumnType("int");

                    b.Property<int>("egitimcilerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BilisimId");

                    b.HasIndex("FenId");

                    b.HasIndex("MatematikId");

                    b.HasIndex("egitimcilerId");

                    b.ToTable("Ogrencies");
                });

            modelBuilder.Entity("LiseDers.Model.Model.Sınavlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BilisimId")
                        .HasColumnType("int");

                    b.Property<int>("FenId")
                        .HasColumnType("int");

                    b.Property<int>("MatematikId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sınavlars");
                });

            modelBuilder.Entity("MatematikSınavlar", b =>
                {
                    b.Property<int>("MatematikId")
                        .HasColumnType("int");

                    b.Property<int>("SınavlarId")
                        .HasColumnType("int");

                    b.HasKey("MatematikId", "SınavlarId");

                    b.HasIndex("SınavlarId");

                    b.ToTable("MatematikSınavlar");
                });

            modelBuilder.Entity("OgrencilerSınavlar", b =>
                {
                    b.Property<int>("OgrencilerId")
                        .HasColumnType("int");

                    b.Property<int>("sınavlarsId")
                        .HasColumnType("int");

                    b.HasKey("OgrencilerId", "sınavlarsId");

                    b.HasIndex("sınavlarsId");

                    b.ToTable("OgrencilerSınavlar");
                });

            modelBuilder.Entity("BilisimSınavlar", b =>
                {
                    b.HasOne("LiseDers.Model.Model.Bilisim", null)
                        .WithMany()
                        .HasForeignKey("BilisimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiseDers.Model.Model.Sınavlar", null)
                        .WithMany()
                        .HasForeignKey("SınavlarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FenSınavlar", b =>
                {
                    b.HasOne("LiseDers.Model.Model.Fen", null)
                        .WithMany()
                        .HasForeignKey("FenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiseDers.Model.Model.Sınavlar", null)
                        .WithMany()
                        .HasForeignKey("SınavlarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LiseDers.Model.Model.Egitimciler", b =>
                {
                    b.HasOne("LiseDers.Model.Model.Bilisim", "Bilisim")
                        .WithMany("Egitimciler")
                        .HasForeignKey("BilisimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiseDers.Model.Model.Fen", "Fen")
                        .WithMany("Egitimciler")
                        .HasForeignKey("FenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiseDers.Model.Model.Matematik", "Matematik")
                        .WithMany("Egitimciler")
                        .HasForeignKey("MatematikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bilisim");

                    b.Navigation("Fen");

                    b.Navigation("Matematik");
                });

            modelBuilder.Entity("LiseDers.Model.Model.Ogrenciler", b =>
                {
                    b.HasOne("LiseDers.Model.Model.Bilisim", "bilisim")
                        .WithMany("Ogrenciler")
                        .HasForeignKey("BilisimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiseDers.Model.Model.Fen", "fen")
                        .WithMany("Ogrenciler")
                        .HasForeignKey("FenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiseDers.Model.Model.Matematik", "matematik")
                        .WithMany("Ogrenciler")
                        .HasForeignKey("MatematikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiseDers.Model.Model.Egitimciler", "egitimciler")
                        .WithMany()
                        .HasForeignKey("egitimcilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bilisim");

                    b.Navigation("egitimciler");

                    b.Navigation("fen");

                    b.Navigation("matematik");
                });

            modelBuilder.Entity("MatematikSınavlar", b =>
                {
                    b.HasOne("LiseDers.Model.Model.Matematik", null)
                        .WithMany()
                        .HasForeignKey("MatematikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiseDers.Model.Model.Sınavlar", null)
                        .WithMany()
                        .HasForeignKey("SınavlarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OgrencilerSınavlar", b =>
                {
                    b.HasOne("LiseDers.Model.Model.Ogrenciler", null)
                        .WithMany()
                        .HasForeignKey("OgrencilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiseDers.Model.Model.Sınavlar", null)
                        .WithMany()
                        .HasForeignKey("sınavlarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LiseDers.Model.Model.Bilisim", b =>
                {
                    b.Navigation("Egitimciler");

                    b.Navigation("Ogrenciler");
                });

            modelBuilder.Entity("LiseDers.Model.Model.Fen", b =>
                {
                    b.Navigation("Egitimciler");

                    b.Navigation("Ogrenciler");
                });

            modelBuilder.Entity("LiseDers.Model.Model.Matematik", b =>
                {
                    b.Navigation("Egitimciler");

                    b.Navigation("Ogrenciler");
                });
#pragma warning restore 612, 618
        }
    }
}
